renderTemperatureRanges: function(cityNameAttr) {
            console.log('\n\n');
            //console.log($('[data-city-name="' + cityNameAttr + '"]:not(.bx-clone)'));
            var $currentLi = $('[data-city-name="' + cityNameAttr + '"]:not(.bx-clone)');
            var contWidth = $currentLi.find('.box-range').width();

            var arrMins = [],
                arrMaxs = [],
            //arrRangesWidth = [],
                fullWidths = [];
                //arrEdges = [];

            var $range = $currentLi.find('.box-range span');
            $range.each(function() {
                //arrRangesWidth.push($(this).data('max') - $(this).data('min'));
                arrMins.push($(this).parent().parent().find('.bottom-temp').text());
                arrMaxs.push($(this).parent().parent().find('.top-temp').text());
            });
            //var maxWidth = Math.max.apply(undefined, arrRangesWidth);
            var minEdge = Math.min.apply(undefined, arrMins);
            var maxEdge = Math.max.apply(undefined, arrMaxs);
            var maxRange = maxEdge - minEdge;
            //console.log('Max width for range: ' + maxRange);
            console.log('Mins array: ' + arrMins);
            //console.log('Global min: ' + minEdge);
            console.log('Maxs array: ' + arrMaxs);
            //console.log('Global max: ' + maxEdge);


            $range.width(function(index) {
                //console.log('difference: ' + ($(this).data('max') - $(this).data('min')));
                //console.log('max: ' + $(this).data('max'));
                //console.log('min: ' + $(this).data('min'));
                //console.log('Index: ' + index);

                var elWidth = $currentLi.find('.top-temp').eq(index).text() - $currentLi.find('.bottom-temp').eq(index).text();
                return ((elWidth/maxRange)*contWidth);
            });

            /*$range*/$currentLi.find('.temp-range').each(function(index) {
                var offset = (($currentLi.find('.bottom-temp').eq(index).text() - minEdge)/maxRange)*contWidth;
                $(this).css('margin-left', offset);
                fullWidths.push(parseFloat($(this).css('margin-left')) + $(this).width());

            });
            //console.log($('.box-range').width());
            console.log('Full max width: ' + Math.max.apply(undefined, fullWidths));
            //$(".box-range").width(curWidth/maxRange)*contWidth;
        }